name: Build Categraf for armv7 (Final)

on:
  workflow_dispatch:

jobs:
  build-in-container:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Set up QEMU for ARM emulation
        uses: docker/setup-qemu-action@v3

      - name: Build inside ARM32v7 Docker Container
        run: |
          docker run --rm -v "${{ github.workspace }}":/src arm32v7/debian:buster-slim /bin/bash -c '
            set -e # 任何命令失败则立即退出

            # 1. 修复软件源
            echo "deb http://archive.debian.org/debian buster main" > /etc/apt/sources.list
            echo "deb http://archive.debian.org/debian-security buster/updates main" >> /etc/apt/sources.list
            
            # 2. 安装依赖
            apt-get update -o Acquire::Check-Valid-Until=false
            apt-get install -y git build-essential libpcap-dev wget

            # 3. 安装Go
            wget -q https://go.dev/dl/go1.21.10.linux-armv6l.tar.gz
            tar -C /usr/local -xzf go1.21.10.linux-armv6l.tar.gz
            export PATH=$PATH:/usr/local/go/bin
            
            # 4. 进入源代码目录
            cd /src

            # 5. 最终的、包含所有修复的编译命令
            #    -buildvcs=false 禁用了版本戳记，解决了Git错误
            CGO_ENABLED=1 go build -buildvcs=false -ldflags="-s -w" -o categraf .
          '
          
      - name: Check the build output
        run: |
          echo "Build finished. Checking the output file..."
          ls -l ./categraf
          file ./categraf

      - name: Prepare Artifact Package
        run: |
          mkdir -p package_root
          mv ./categraf package_root/
          cp -r conf package_root/
          tar -zcvf categraf-linux-armv7.tar.gz -C package_root .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: categraf-linux-armv7-final-build
          path: ./categraf-linux-armv7.tar.gz