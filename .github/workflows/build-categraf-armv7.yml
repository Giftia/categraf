name: Build Categraf for armv7 (musl-static)

on:
  workflow_dispatch:

jobs:
  build-musl-static:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build with musl-cross-compiler
        # 使用一个预配置好的、专门用于musl交叉编译的Action
        # https://github.com/rust-embedded/cross
        uses: rust-embedded/cross@v0.2.5
        with:
          # 指定我们的交叉编译目标
          target: armv7-unknown-linux-musleabihf
          # 在容器内部执行的命令
          run: |
            # 这个Action的容器里已经内置了交叉编译工具链
            # 我们只需要安装libpcap和Go
            apt-get update
            apt-get install -y libpcap-dev wget
            
            # 下载并安装Go
            wget https://go.dev/dl/go1.21.10.linux-amd64.tar.gz
            tar -C /usr/local -xzf go1.21.10.linux-amd64.tar.gz
            export PATH=$PATH:/usr/local/go/bin
            
            # 使用musl工具链进行编译
            # Go会自动识别交叉编译环境并使用正确的CC（C编译器）
            go build -ldflags="-s -w" -o categraf .

      - name: Prepare Artifact Package
        # 构建完成后，文件会出现在主机的workspace中
        run: |
          mkdir -p package_root
          mv categraf package_root/
          cp -r conf package_root/
          tar -zcvf categraf-linux-armv7-musl.tar.gz -C package_root .

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: categraf-linux-armv7-musl-package
          path: ./categraf-linux-armv7-musl.tar.gz